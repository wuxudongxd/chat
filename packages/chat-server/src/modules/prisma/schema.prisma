// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique
  password   String
  avatar     String   @default("https://gravatar.com/avatar/placeholder?s=200")
  tag        String   @default("")
  createTime DateTime @default(now())
  role       String   @default("user")

  groups                    Group[]
  group_messages            Group_Message[]
  relation1                 Relation[]         @relation("relation1")
  relation2                 Relation[]         @relation("relation2")
  speaker_relation_message  Relation_Message[] @relation("speaker")
  listener_relation_message Relation_Message[] @relation("listener")
}

model Group {
  id         Int      @id @default(autoincrement())
  name       String
  notice     String   @default("")
  createTime DateTime @default(now())

  users    User[]
  messages Group_Message[]
}

model Group_Message {
  id         Int      @id @default(autoincrement())
  content    String
  createTime DateTime @default(now())

  userId  Int
  groupId Int

  user  User  @relation(fields: [userId], references: [id])
  group Group @relation(fields: [groupId], references: [id])
}

model Relation {
  id         String   @id @unique()
  createTime DateTime @default(now())

  relation1Id Int
  relation2Id Int

  relation1       User               @relation(fields: [relation1Id], references: [id], name: "relation1")
  relation2       User               @relation(fields: [relation1Id], references: [id], name: "relation2")
  relation_messages Relation_Message[]
}

model Relation_Message {
  id         Int      @id @default(autoincrement())
  content    String
  createTime DateTime @default(now())
  relationId String
  speakerId  Int
  listenerId Int

  speaker  User     @relation(fields: [speakerId], references: [id], name: "speaker")
  listener User     @relation(fields: [listenerId], references: [id], name: "listener")
  relation Relation @relation(fields: [relationId], references: [id])
}
